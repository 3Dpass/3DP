name: Release CI

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:

  build:

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: linux-x86_64
            suffix: ''
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: linux-aarch64
            suffix: ''
          - target: x86_64-apple-darwin
            os: macos-latest
            name: macos
            suffix: ''

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4.1.7

      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: nightly-2023-05-20
          override: true

      - name: Add WASM target
        run: rustup target add wasm32-unknown-unknown

      - uses: actions/cache@v4.1.0
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/cache@v4.1.0
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/cache@v4.1.0
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: '--release'

      - name: Package
        shell: bash
        run: |
          cd target/release
          tar czvf ../../poscan-consensus-${{ matrix.name }}.tar.gz poscan-consensus${{ matrix.suffix }}
          cd -

      - name: Package WASM Artifact
        if: matrix.name == 'linux-x86_64'
        run: |
          cd target/release/wbuild/poscan-runtime
          tar czvf ../../../../poscan_runtime-wasm32-unknown-unknown.tar.gz poscan_runtime.compact.compressed.wasm

      - name: Publish
        uses: softprops/action-gh-release@v2.0.6
        with:
          files: |
            poscan-consensus-*
            poscan_runtime-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
